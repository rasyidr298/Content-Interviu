{
    "status": "OK",
    "message": "data berhasil didapatkan",
    "data": [
        {
            "id": 1,
            "category": "Design Pattern",
            "question": "Apa yang kamu ketahui mengenai Design Pattern?",
            "time": 30,
            "purpose": "<p><span style=\"color: #090a0a;\"><strong>Tujuan</strong></span></p><p><span style=\"color: #6c7072;\">Recruiter ingin mengetahui alasan yang kamu ketahui terkait penggunaan design pattern</span></p><p><span style=\"color: #090a0a;\"><strong>Deskripsi</strong></span></p><p><span style=\"color: #6c7072;\">Design pattern merupakan solusi pada suatu masalah yang digunakan dalam membuat arsitektur aplikasi.</span></p><p><span style=\"color: #6c7072;\">Design Pattern sejenis template untuk memudahkan dalam coding dan dapat pattern ini dapat digunakan berulang.</span></p><p><span style=\"color: #6c7072;\">Contoh: MVC (Model-View-Controller), MVVM (Model-View-View-Model), Facade</span></p>",
            "tips": "<p><span style=\"color: #090a0a;\"><strong>Tips dan Trik</strong></span></p><ul><li><span style=\"color: #6c7072;\">Disarankan kamu perlu bertanya minimal 1 pertanyaan untuk mengetahui antusiasme kamu terhadap posisi dan perusahaan ini</span></li><li><span style=\"color: #6c7072;\">Siapkan daftar pertanyaan sebelum interview dengan meriset perusahaan terlebih dahulu. Apa bila ada pertanyaan, bisa dicatat untuk ditanyakan</span></li><li><span style=\"color: #6c7072;\">Sebisa mungkin jangan bertanya apa yang sudah dijelaskan sebelumnya</span></li></ul>",
            "assets": ["assets1", "assets2"],
            "video": "ini video"
        },
        {
            "id": 2,
            "category": "Design Pattern",
            "question": "Jelaskan apa yang kamu ketahui tentang MVVM?",
            "time": 30,
            "purpose": "<p><span style=\"color: #090a0a;\"><strong>Tujuan</strong></span></p><p><span style=\"color: #6c7072;\">Recruiter ingin mengetahui seberapa kamu memahami dan menguasai MVVM</span></p><p><span style=\"color: #090a0a;\"><strong>Deskripsi</strong></span></p><p><span style=\"color: #6c7072;\">MVVM (Model-View-ViewModel) design pattern yang berguna untuk kita membuat apps agar mudah di maintain, extend, dan unit test. Element dari MVVM </span></p><p><span style\"color: #6c7072;\">Model —Memiliki kode untuk business logic serta repositori. Tugas repositori untuk menjembatani request dari ViewModel ke sumber data lokal atau remote. </span></p><p><span style=\"color: #6c7072;\">View — Tidak ada business logic, hanya tampilan yang terhubung dengan user (XML). Aksi user dikirim ke view model tapi tidak akan langsung mendapatkan respons. Untuk mendapatkan responsenya, View akan terima dari ViewModel.</span></p><p><span style=\"color: #6c7072;\">ViewModel —Mayoritas proses yang ada di UI terjadi di komponen ini. Ia tidak perlu tahu view mana yang memanggilnya. Ia hanya memberikan data yang dibutuhkan kepada siapapun yang menghubunginya via observable.</span></p>",
            "tips": "<p><span style=\"color: #090a0a;\"><strong>Tips dan Trik</strong></span></p><ul><li><span style=\"color: #6c7072;\">1. Kamu bisa menyampaikan mengenai pengertian, bentuk/jenis, dan tujuan sebagai penyampaian bentuk pemahaman kamu terhadap MVVM</span></li><li><span style=\"color: #6c7072;\">2. Apabila kamu memiliki pengalaman menggunakan MVVM, kamu bisa menceritakan pengalaman tersebut. Apabila belum pernah menggunakan, kamu bisa ceritakan contoh dari MVVM</span></li></ul>",
            "assets": ["assets1", "assets2"],
            "video": "ini video"
        }
        
    ]
}